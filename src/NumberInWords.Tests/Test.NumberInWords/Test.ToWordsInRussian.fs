namespace GGroupp.Core.Tests.NumberInWordsTest

open Xunit
open GGroupp.NumberInWords
open GGroupp.Core.Tests.TestHelper

module ToWordsInRussianTest =

    [<Theory>]
    [<InlineData(0L, "ноль")>]
    [<InlineData(1L, "один")>]
    [<InlineData(15L, "пятнадцать")>]
    [<InlineData(300L, "триста")>]
    [<InlineData(890167000002L, "восемьсот девяносто миллиардов сто шестьдесят семь миллионов два")>]
    [<InlineData(1000000010L, "один миллиард десять")>]
    [<InlineData(167008007L, "сто шестьдесят семь миллионов восемь тысяч семь")>]
    [<InlineData(1000000L, "один миллион")>]
    [<InlineData(1000L, "одна тысяча")>]
    [<InlineData(2007L, "две тысячи семь")>]
    [<InlineData(5101L, "пять тысяч сто один")>]
    [<InlineData(9000000001L, "девять миллиардов один")>]
    [<InlineData(1000000007L, "один миллиард семь")>]
    [<InlineData(1000800813L, "один миллиард восемьсот тысяч восемьсот тринадцать")>]
    [<InlineData(60001501000002L, "шестьдесят триллионов один миллиард пятьсот один миллион два")>]
    [<InlineData(3000030407L, "три миллиарда тридцать тысяч четыреста семь")>]
    [<InlineData(1600000009L, "один миллиард шестьсот миллионов девять")>]
    [<InlineData(1008000515L, "один миллиард восемь миллионов пятьсот пятнадцать")>]
    [<InlineData(7654003L, "семь миллионов шестьсот пятьдесят четыре тысячи три")>]
    [<InlineData(17890001011L, "семнадцать миллиардов восемьсот девяносто миллионов одна тысяча одиннадцать")>]
    [<InlineData(-1L, "минус один")>]
    [<InlineData(-15L, "минус пятнадцать")>]
    [<InlineData(-300L, "минус триста")>]
    [<InlineData(-890167000002L, "минус восемьсот девяносто миллиардов сто шестьдесят семь миллионов два")>]
    [<InlineData(-1000000010L, "минус один миллиард десять")>]
    [<InlineData(-167008007L, "минус сто шестьдесят семь миллионов восемь тысяч семь")>]
    [<InlineData(-1000000L, "минус один миллион")>]
    [<InlineData(-1000L, "минус одна тысяча")>]
    [<InlineData(-2007L, "минус две тысячи семь")>]
    [<InlineData(-5101L, "минус пять тысяч сто один")>]
    [<InlineData(-9000000001L, "минус девять миллиардов один")>]
    [<InlineData(-1000000007L, "минус один миллиард семь")>]
    [<InlineData(-1000800813L, "минус один миллиард восемьсот тысяч восемьсот тринадцать")>]
    [<InlineData(-60001501000002L, "минус шестьдесят триллионов один миллиард пятьсот один миллион два")>]
    [<InlineData(-3000030407L, "минус три миллиарда тридцать тысяч четыреста семь")>]
    [<InlineData(-1600000009L, "минус один миллиард шестьсот миллионов девять")>]
    [<InlineData(-1008000515L, "минус один миллиард восемь миллионов пятьсот пятнадцать")>]
    [<InlineData(-7654003L, "минус семь миллионов шестьсот пятьдесят четыре тысячи три")>]
    [<InlineData(-17890001011L, "минус семнадцать миллиардов восемьсот девяносто миллионов одна тысяча одиннадцать")>]
    [<InlineData(-9223372036854775808L, "минус девять квинтиллионов двести двадцать три квадриллиона триста семьдесят два триллиона тридцать шесть миллиардов восемьсот пятьдесят четыре миллиона семьсот семьдесят пять тысяч восемьсот восемь")>]
    [<InlineData(9223372036854775807L, "девять квинтиллионов двести двадцать три квадриллиона триста семьдесят два триллиона тридцать шесть миллиардов восемьсот пятьдесят четыре миллиона семьсот семьдесят пять тысяч восемьсот семь")>]
    let ``The result of toWordsInRussian should be expected`` value expected =
        toWordsInRussian value |> shouldBeEqual expected
